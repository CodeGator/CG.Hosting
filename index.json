{
  "api/CG.Hosting.Alerts.HostedAlertHandler-1.html": {
    "href": "api/CG.Hosting.Alerts.HostedAlertHandler-1.html",
    "title": "Class HostedAlertHandler<TOptions>",
    "keywords": "Class HostedAlertHandler<TOptions> This class is a hosted implementation of the CG.Alerts.IAlertHandler interface. Inheritance System.Object CG.Alerts.AlertHandlerBase CG.Alerts.DefaultAlertHandler HostedAlertHandler<TOptions> Implements CG.Alerts.IAlertHandler Inherited Members CG.Alerts.AlertHandlerBase.HandleAlert(CG.Alerts.AlertType, System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Alerts Assembly : CG.Hosting.dll Syntax public class HostedAlertHandler<TOptions> : DefaultAlertHandler, IAlertHandler where TOptions : StandardOptions, new() Type Parameters Name Description TOptions Remarks The idea, with this class, is to create a set of handlers that are able to use the services of the associated Microsoft.Extensions.Hosting.IHost object to do more useful things when processing alerts. In this case, these handlers process alerts like this: Alert Type Processing Action Audit Writes to the console window. Information Writes to the log. Warning Writes to the log. Error Writes to the log and email. Critical Writes to the log, email, and sms. Debug Writes to the log. Trace Writes to the log. Constructors HostedAlertHandler(IHost) This constructor creates a new instance of the HostedAlertHandler<TOptions> class. Declaration public HostedAlertHandler(IHost host) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use with this handler. Properties Host This property contains a reference to the current host. Declaration protected IHost Host { get; set; } Property Value Type Description Microsoft.Extensions.Hosting.IHost Tokens This property contains a collection of named replacement tokens, for rendering email templates at runtime. Declaration protected IDictionary<string, string> Tokens { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > Methods HandleAudit(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleAudit(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleAudit(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) HandleCritical(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleCritical(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleCritical(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) HandleDebug(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleDebug(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleDebug(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) HandleError(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleError(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleError(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) HandleInformation(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleInformation(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleInformation(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) HandleTrace(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleTrace(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleTrace(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) HandleWarning(IDictionary<String, Object>, String, String, Int32) Declaration protected override void HandleWarning(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args System.String memberName System.String sourceFilePath System.Int32 sourceLineNumber Overrides CG.Alerts.DefaultAlertHandler.HandleWarning(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String, System.String, System.Int32) Implements CG.Alerts.IAlertHandler"
  },
  "api/CG.Hosting.Alerts.html": {
    "href": "api/CG.Hosting.Alerts.html",
    "title": "Namespace CG.Hosting.Alerts",
    "keywords": "Namespace CG.Hosting.Alerts Classes HostedAlertHandler<TOptions> This class is a hosted implementation of the CG.Alerts.IAlertHandler interface. Template This class utility contains template rendering logic. TokenNames This class utility contains well-known replacement token names."
  },
  "api/CG.Hosting.Alerts.Template.html": {
    "href": "api/CG.Hosting.Alerts.Template.html",
    "title": "Class Template",
    "keywords": "Class Template This class utility contains template rendering logic. Inheritance System.Object Template Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Alerts Assembly : CG.Hosting.dll Syntax public static class Template Methods Render(String, IDictionary<String, String>) This method renders the specified template using the specified collection of named replacement tokens. Declaration public static string Render(string template, IDictionary<string, string> tokens) Parameters Type Name Description System.String template The template to use for the operation. System.Collections.Generic.IDictionary < System.String , System.String > tokens The replacement tokens to use for the operation. Returns Type Description System.String A string containing the rendered template."
  },
  "api/CG.Hosting.Alerts.TokenNames.html": {
    "href": "api/CG.Hosting.Alerts.TokenNames.html",
    "title": "Class TokenNames",
    "keywords": "Class TokenNames This class utility contains well-known replacement token names. Inheritance System.Object TokenNames Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Alerts Assembly : CG.Hosting.dll Syntax public static class TokenNames Fields APP This field represents the current application's friendly name. Declaration public const string APP = \"%APP%\" Field Value Type Description System.String EX This field represents an exception associated with an alert. Declaration public const string EX = \"%EX%\" Field Value Type Description System.String MN This field represents the current machine's name. Declaration public const string MN = \"%MN%\" Field Value Type Description System.String MSG This field represents the alert message. Declaration public const string MSG = \"%MSG%\" Field Value Type Description System.String USER This field represents the current user's name. Declaration public const string USER = \"%USER%\" Field Value Type Description System.String"
  },
  "api/CG.Hosting.HostExtensions.html": {
    "href": "api/CG.Hosting.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting Assembly : CG.Hosting.dll Syntax public static class HostExtensions Methods SetHostedAlertHandler<TOptions>(IHost) This method sets a hosted handler for alerts processing. Declaration public static IHost SetHostedAlertHandler<TOptions>(this IHost host) where TOptions : StandardOptions, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHost Type Parameters Name Description TOptions The type of associated options. Remarks The idea, with this method, is to replace the default alert handler with one that is capable of taking advantage of the services inside an Microsoft.Extensions.Hosting.IHost object, to process alerts with a wider variety of handling options. For more information see HostedAlertHandler<TOptions> Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the arguments are missing, or NULL."
  },
  "api/CG.Hosting.html": {
    "href": "api/CG.Hosting.html",
    "title": "Namespace CG.Hosting",
    "keywords": "Namespace CG.Hosting Classes HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. StandardHost This class utility provides convenience methods for creating instances of Microsoft.Extensions.Hosting.IHostBuilder with pre-configured defaults."
  },
  "api/CG.Hosting.Options.AlertHandlerOptions.html": {
    "href": "api/CG.Hosting.Options.AlertHandlerOptions.html",
    "title": "Class AlertHandlerOptions",
    "keywords": "Class AlertHandlerOptions This class represents configuration options for the hosted alert handler. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase AlertHandlerOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class AlertHandlerOptions : OptionsBase, IValidatableObject Properties AuditAlerts This property contains options for audit alert processing. Declaration public AuditAlertOptions AuditAlerts { get; set; } Property Value Type Description AuditAlertOptions CriticalAlerts This property contains options for critical error alert processing. Declaration public CriticalAlertOptions CriticalAlerts { get; set; } Property Value Type Description CriticalAlertOptions DebugAlerts This property contains options for debug alert processing. Declaration public DebugAlertOptions DebugAlerts { get; set; } Property Value Type Description DebugAlertOptions ErrorAlerts This property contains options for error alert processing. Declaration public ErrorAlertOptions ErrorAlerts { get; set; } Property Value Type Description ErrorAlertOptions InformationAlerts This property contains options for information alert processing. Declaration public InformationAlertOptions InformationAlerts { get; set; } Property Value Type Description InformationAlertOptions TraceAlerts This property contains options for trace alert processing. Declaration public TraceAlertOptions TraceAlerts { get; set; } Property Value Type Description TraceAlertOptions WarningAlerts This property contains options for warning alert processing. Declaration public WarningAlertOptions WarningAlerts { get; set; } Property Value Type Description WarningAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.AuditAlertOptions.html": {
    "href": "api/CG.Hosting.Options.AuditAlertOptions.html",
    "title": "Class AuditAlertOptions",
    "keywords": "Class AuditAlertOptions This class represents configuration options for audit alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase AuditAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class AuditAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.CriticalAlertOptions.html": {
    "href": "api/CG.Hosting.Options.CriticalAlertOptions.html",
    "title": "Class CriticalAlertOptions",
    "keywords": "Class CriticalAlertOptions This class represents configuration options for critical alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CriticalAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class CriticalAlertOptions : OptionsBase, IValidatableObject Properties Email This property contains options for critical error emails. Declaration public EmailOptions Email { get; set; } Property Value Type Description EmailOptions Sms This property contains options for critical sms error messages. Declaration public SmsOptions Sms { get; set; } Property Value Type Description SmsOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.DebugAlertOptions.html": {
    "href": "api/CG.Hosting.Options.DebugAlertOptions.html",
    "title": "Class DebugAlertOptions",
    "keywords": "Class DebugAlertOptions This class represents configuration options for debug alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase DebugAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class DebugAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.EmailOptions.html": {
    "href": "api/CG.Hosting.Options.EmailOptions.html",
    "title": "Class EmailOptions",
    "keywords": "Class EmailOptions This class represents configuration options for sending emails. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase EmailOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class EmailOptions : OptionsBase, IValidatableObject Constructors EmailOptions() This constructor creates a new instance of the EmailOptions class. Declaration public EmailOptions() Properties Body This property contains a template for the email body. Declaration [Required] public string Body { get; set; } Property Value Type Description System.String Enabled This property indicates whether emails are enabled, or not. Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean From This property contains an email address that represents the source for an email. Declaration [Required] public string From { get; set; } Property Value Type Description System.String IsHtml This property indicates the email contains HTML. Declaration public bool IsHtml { get; set; } Property Value Type Description System.Boolean Subject This property contains the a template for the email subject. Declaration [Required] public string Subject { get; set; } Property Value Type Description System.String To This property contains one or more email addresses, separated by commas, that represent the destination for an email. Declaration [Required] public string To { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.ErrorAlertOptions.html": {
    "href": "api/CG.Hosting.Options.ErrorAlertOptions.html",
    "title": "Class ErrorAlertOptions",
    "keywords": "Class ErrorAlertOptions This class represents configuration options for error alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ErrorAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class ErrorAlertOptions : OptionsBase, IValidatableObject Properties Email This property contains options for error emails. Declaration public EmailOptions Email { get; set; } Property Value Type Description EmailOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.html": {
    "href": "api/CG.Hosting.Options.html",
    "title": "Namespace CG.Hosting.Options",
    "keywords": "Namespace CG.Hosting.Options Classes AlertHandlerOptions This class represents configuration options for the hosted alert handler. AuditAlertOptions This class represents configuration options for audit alert processing. CriticalAlertOptions This class represents configuration options for critical alert processing. DebugAlertOptions This class represents configuration options for debug alert processing. EmailOptions This class represents configuration options for sending emails. ErrorAlertOptions This class represents configuration options for error alert processing. InformationAlertOptions This class represents configuration options for information alert processing. ServiceOptions This class represents configuration options for hosted services. SmsOptions This class represents configuration options for sending sms messages. StandardOptions This class represents configuration options for a standardized, hosted, ecosystem. TraceAlertOptions This class represents configuration options for trace alert processing. WarningAlertOptions This class represents configuration options for warning alert processing."
  },
  "api/CG.Hosting.Options.InformationAlertOptions.html": {
    "href": "api/CG.Hosting.Options.InformationAlertOptions.html",
    "title": "Class InformationAlertOptions",
    "keywords": "Class InformationAlertOptions This class represents configuration options for information alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase InformationAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class InformationAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.ServiceOptions.html": {
    "href": "api/CG.Hosting.Options.ServiceOptions.html",
    "title": "Class ServiceOptions",
    "keywords": "Class ServiceOptions This class represents configuration options for hosted services. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ServiceOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class ServiceOptions : OptionsBase, IValidatableObject Properties Email This property contains email service options. Declaration public EmailServiceOptions Email { get; set; } Property Value Type Description CG.Email.Options.EmailServiceOptions Logging This property contains logging service options. Declaration public SerilogServiceOptions Logging { get; set; } Property Value Type Description CG.Serilog.Options.SerilogServiceOptions Sms This property contains sms service options. Declaration public SmsServiceOptions Sms { get; set; } Property Value Type Description CG.Sms.Options.SmsServiceOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.SmsOptions.html": {
    "href": "api/CG.Hosting.Options.SmsOptions.html",
    "title": "Class SmsOptions",
    "keywords": "Class SmsOptions This class represents configuration options for sending sms messages. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase SmsOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class SmsOptions : OptionsBase, IValidatableObject Constructors SmsOptions() This constructor creates a new instance of the SmsOptions class. Declaration public SmsOptions() Properties Body This property contains a template for the sms message body. Declaration [Required] public string Body { get; set; } Property Value Type Description System.String Enabled This property indicates whether sms messages are enabled, or not. Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean To This property contains one or more phone numbers, separated by commas, that represent the destination for sms messages. Declaration [Required] public string To { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.StandardOptions.html": {
    "href": "api/CG.Hosting.Options.StandardOptions.html",
    "title": "Class StandardOptions",
    "keywords": "Class StandardOptions This class represents configuration options for a standardized, hosted, ecosystem. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase StandardOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class StandardOptions : OptionsBase, IValidatableObject Properties Alerts This property contains alert handler options. Declaration public AlertHandlerOptions Alerts { get; set; } Property Value Type Description AlertHandlerOptions Services This property contains hosted service options. Declaration public ServiceOptions Services { get; set; } Property Value Type Description ServiceOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.TraceAlertOptions.html": {
    "href": "api/CG.Hosting.Options.TraceAlertOptions.html",
    "title": "Class TraceAlertOptions",
    "keywords": "Class TraceAlertOptions This class represents configuration options for trace alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase TraceAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class TraceAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.WarningAlertOptions.html": {
    "href": "api/CG.Hosting.Options.WarningAlertOptions.html",
    "title": "Class WarningAlertOptions",
    "keywords": "Class WarningAlertOptions This class represents configuration options for warning alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase WarningAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class WarningAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.StandardHost.html": {
    "href": "api/CG.Hosting.StandardHost.html",
    "title": "Class StandardHost",
    "keywords": "Class StandardHost This class utility provides convenience methods for creating instances of Microsoft.Extensions.Hosting.IHostBuilder with pre-configured defaults. Inheritance System.Object StandardHost Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting Assembly : CG.Hosting.dll Syntax public static class StandardHost Methods CreateStandardBuilder<TProgram, TOptions>() This method creates an Microsoft.Extensions.Hosting.IHostBuilder object preconfigured with a standard set of extensions. Declaration public static IHostBuilder CreateStandardBuilder<TProgram, TOptions>() where TProgram : class where TOptions : StandardOptions, new() Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder An Microsoft.Extensions.Hosting.IHostBuilder object. Type Parameters Name Description TProgram The type of associated program. TOptions The type of associated options."
  },
  "api/Microsoft.AspNetCore.Hosting.html": {
    "href": "api/Microsoft.AspNetCore.Hosting.html",
    "title": "Namespace Microsoft.AspNetCore.Hosting",
    "keywords": "Namespace Microsoft.AspNetCore.Hosting Classes WebHostBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Hosting.IWebHostBuilder types."
  },
  "api/Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.html",
    "title": "Class WebHostBuilderExtensions",
    "keywords": "Class WebHostBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Hosting.IWebHostBuilder types. Inheritance System.Object WebHostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Hosting Assembly : CG.Hosting.dll Syntax public static class WebHostBuilderExtensions Methods UseStandardExtensions(IWebHostBuilder) This method adds middleware to support a standard hosting configuration, including user secrets, program options, and serilog logging. Declaration public static IWebHostBuilder UseStandardExtensions(this IWebHostBuilder webHostBuilder) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostBuilder webHostBuilder The application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Hosting.IWebHostBuilder The value of the webHostBuilder parameter for chaining calls together. Examples This example demostrates a typical use of the UseStandardExtensions(IWebHostBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program}() // This call also required. .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class ApplicationBuilderExtensions Methods UseStandardExtensions(IApplicationBuilder) This method adds middleware to support a standard hosting configuration, including user secrets, program options, and serilog logging. Declaration public static IApplicationBuilder UseStandardExtensions(this IApplicationBuilder applicationBuilder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter for chaining calls together. Examples This example demostrates a typical use of the UseStandardExtensions(IApplicationBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program, MyOptions}() // This call also required. .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions",
    "keywords": "Class HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types. Inheritance System.Object HostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostBuilderExtensions Methods AddStandardExtensions<TProgram>(IHostBuilder) This method adds standard hosting configuration and services to the specified host builder, including user secrets and serilog based logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram>(this IHostBuilder hostBuilder) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. Examples This example demonstrates a typical use of the AddStandardExtensions<TProgram>(IHostBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program}() .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); // This call also required. }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. AddStandardExtensions<TProgram, TOptions>(IHostBuilder) This method adds standard hosting configuration and services to the specified host builder, including user secrets, program options, and serilog based logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram, TOptions>(this IHostBuilder hostBuilder) where TProgram : class where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. TOptions The type of associated options. Examples This example demonstrates a typical use of the AddStandardExtensions<TProgram, TOptions>(IHostBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program, MyOptions}() .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); // This call also required. }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostExtensions Methods RunDelegate(IHost, Action<IHost>) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static void RunDelegate(this IHost host, Action<IHost> action) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. Examples This example demostrates a typical use of the RunDelegate(IHost, Action<IHost>) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .Build() .RunDelegate((host) => { Console.WriteLine(\"Hello World\"); }); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static Task RunDelegateAsync(this IHost host, Action<IHost, CancellationToken> action, CancellationToken token = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > action The delegate to use for the operation. System.Threading.CancellationToken token A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Examples This example demostrates a typical use of the RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .Build() .RunDelegateAsync((host, token) => { Console.WriteLine(\"Hello World\"); }).Result; } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunOnce<TProgram>(IHost, Action<IHost>) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object, allowing a single instance at any given time to run on the given machine. Declaration public static bool RunOnce<TProgram>(this IHost host, Action<IHost> action) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. Returns Type Description System.Boolean True if the delegate was run; false otherwise. Type Parameters Name Description TProgram The type of associated .NET program Examples This example demonstrates how to use the RunOnce<TProgram>(IHost, Action<IHost>) method: class TestProgram { static void Main(string[] args) { Host.CreateDefaultBuilder() .Build() .RunOnce(host => { Console.WriteLine(\"Hello World\"); }); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunOnceAsync<TProgram>(IHost, Action<IHost>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object, allowing a single instance at any given time to run on the given machine. Declaration public static Task<bool> RunOnceAsync<TProgram>(this IHost host, Action<IHost> action, CancellationToken cancellationToken = default(CancellationToken)) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Boolean > True if the delegate was run; false otherwise. Type Parameters Name Description TProgram The type of associated .NET program Remarks This method is intended to wrap the logic in the main entry point of a .NET process. It then prevents that logic from being run more than once simultaneously. Examples This example demonstrates how to use the RunOnceAsync<TProgram>(IHost, Action<IHost>, CancellationToken) method: class TestProgram { static async Task Main(string[] args) { await Host.CreateDefaultBuilder() .Build() .RunOnceAsync((host) => { Console.WriteLine(\"Hello World\"); }); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.html": {
    "href": "api/Microsoft.Extensions.Hosting.html",
    "title": "Namespace Microsoft.Extensions.Hosting",
    "keywords": "Namespace Microsoft.Extensions.Hosting Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types. HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Hosting.dll contains standard hosting logic used by other CodeGator packages."
  }
}