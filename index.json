{
  "api/CG.Hosting.Options.HostOptions.html": {
    "href": "api/CG.Hosting.Options.HostOptions.html",
    "title": "Class HostOptions",
    "keywords": "Class HostOptions This class represents configuration settings for hosting. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase HostOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting.Options Assembly : CG.Hosting.dll Syntax public class HostOptions : OptionsBase, IValidatableObject Properties Logging This property contains logging options. Declaration public SerilogOptions Logging { get; set; } Property Value Type Description CG.Serilog.Options.SerilogOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Hosting.Options.html": {
    "href": "api/CG.Hosting.Options.html",
    "title": "Namespace CG.Hosting.Options",
    "keywords": "Namespace CG.Hosting.Options Classes HostOptions This class represents configuration settings for hosting."
  },
  "api/Microsoft.AspNetCore.Hosting.html": {
    "href": "api/Microsoft.AspNetCore.Hosting.html",
    "title": "Namespace Microsoft.AspNetCore.Hosting",
    "keywords": "Namespace Microsoft.AspNetCore.Hosting Classes WebHostBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Hosting.IWebHostBuilder types."
  },
  "api/Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.html",
    "title": "Class WebHostBuilderExtensions",
    "keywords": "Class WebHostBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Hosting.IWebHostBuilder types. Inheritance System.Object WebHostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Hosting Assembly : CG.Hosting.dll Syntax public static class WebHostBuilderExtensions Methods UseStandardExtensions(IWebHostBuilder) This method adds middleware to support a standard hosting configuration, including user secrets, program options, and serilog logging. Declaration public static IWebHostBuilder UseStandardExtensions(this IWebHostBuilder webHostBuilder) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHostBuilder webHostBuilder The application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Hosting.IWebHostBuilder The value of the webHostBuilder parameter for chaining calls together. Examples This example demostrates a typical use of the UseStandardExtensions(IWebHostBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program}() // This call also required. .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class ApplicationBuilderExtensions Methods UseStandardExtensions(IApplicationBuilder) This method adds middleware to support a standard hosting configuration, including user secrets, program options, and serilog logging. Declaration public static IApplicationBuilder UseStandardExtensions(this IApplicationBuilder applicationBuilder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter for chaining calls together. Examples This example demostrates a typical use of the UseStandardExtensions(IApplicationBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program, MyOptions}() // This call also required. .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions",
    "keywords": "Class HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types. Inheritance System.Object HostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostBuilderExtensions Methods AddStandardExtensions<TProgram>(IHostBuilder) This method adds standard hosting configuration and services to the specified host builder, including user secrets and serilog based logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram>(this IHostBuilder hostBuilder) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. Examples This example demonstrates a typical use of the AddStandardExtensions<TProgram>(IHostBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program}() .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); // This call also required. }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. AddStandardExtensions<TProgram, TOptions>(IHostBuilder) This method adds standard hosting configuration and services to the specified host builder, including user secrets, program options, and serilog based logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram, TOptions>(this IHostBuilder hostBuilder) where TProgram : class where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. TOptions The type of associated options. Examples This example demonstrates a typical use of the AddStandardExtensions<TProgram, TOptions>(IHostBuilder) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program, MyOptions}() .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); // This call also required. }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. AddStandardExtensions<TProgram, TOptions>(IHostBuilder, String) This method adds standard hosting configuration and services to the specified host builder, including user secrets, program options, and serilog based logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram, TOptions>(this IHostBuilder hostBuilder, string sectionName) where TProgram : class where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. System.String sectionName The configuration section to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. TOptions The type of associated options. Examples This example demonstrates a typical use of the AddStandardExtensions<TProgram, TOptions>(IHostBuilder, String) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .AddStandardExtensions{Program, MyOptions}(\"MySection\") .ConfigureWebHost(hostBuilder => { hostBuilder.UseStandardExtensions(); // This call also required. }) .Build() .Run(); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostExtensions Methods RunDelegate(IHost, Action<IHost>) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static void RunDelegate(this IHost host, Action<IHost> action) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. Examples This example demostrates a typical use of the RunDelegate(IHost, Action<IHost>) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .Build() .RunDelegate((host) => { Console.WriteLine(\"Hello World\"); }); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static Task RunDelegateAsync(this IHost host, Action<IHost, CancellationToken> action, CancellationToken token = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > action The delegate to use for the operation. System.Threading.CancellationToken token A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Examples This example demostrates a typical use of the RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .Build() .RunDelegateAsync((host, token) => { Console.WriteLine(\"Hello World\"); }); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.html": {
    "href": "api/Microsoft.Extensions.Hosting.html",
    "title": "Namespace Microsoft.Extensions.Hosting",
    "keywords": "Namespace Microsoft.Extensions.Hosting Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types. HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Hosting.dll contains standard hosting logic used by other CodeGator packages."
  }
}