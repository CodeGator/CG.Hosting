{
  "api/CG.Hosting.Application.html": {
    "href": "api/CG.Hosting.Application.html",
    "title": "Class Application",
    "keywords": "Class Application This class represents a singleton implementation of the IApplication interface. Inheritance System.Object CG.SingletonBase < Application > Application Implements IApplication Inherited Members CG.SingletonBase<CG.Hosting.Application>.Instance() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting Assembly : CG.Hosting.dll Syntax public sealed class Application : SingletonBase<Application>, IApplication Implements IApplication Extension Methods ApplicationExtensions.RunOnce<TProgram>(IApplication, Action) ApplicationExtensions.RunOnceAsync<TProgram>(IApplication, Action, CancellationToken)"
  },
  "api/CG.Hosting.ApplicationExtensions.html": {
    "href": "api/CG.Hosting.ApplicationExtensions.html",
    "title": "Class ApplicationExtensions",
    "keywords": "Class ApplicationExtensions This class contains extension methods related to the IApplication type. Inheritance System.Object ApplicationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Hosting Assembly : CG.Hosting.dll Syntax public static class ApplicationExtensions Methods RunOnce<TProgram>(IApplication, Action) This method executes the specified delegate in a synchronized context, allowing only one instance at a time to run on the given machine. Declaration public static bool RunOnce<TProgram>(this IApplication application, Action action) where TProgram : class Parameters Type Name Description IApplication application The application to use for the operation. System.Action action The delegate to use for the operation. Returns Type Description System.Boolean True if the delegate was run; false otherwise. Type Parameters Name Description TProgram The type of associated .NET program Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunOnceAsync<TProgram>(IApplication, Action, CancellationToken) This method executes the specified delegate in a synchronized context, allowing only one instance at a time to run on the given machine. Declaration public static Task<bool> RunOnceAsync<TProgram>(this IApplication application, Action action, CancellationToken cancellationToken = default(CancellationToken)) where TProgram : class Parameters Type Name Description IApplication application The application to use for the operation. System.Action action The delegate to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Boolean > True if the delegate was run; false otherwise. Type Parameters Name Description TProgram The type of associated .NET program Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/CG.Hosting.html": {
    "href": "api/CG.Hosting.html",
    "title": "Namespace CG.Hosting",
    "keywords": "Namespace CG.Hosting Classes Application This class represents a singleton implementation of the IApplication interface. ApplicationExtensions This class contains extension methods related to the IApplication type. Interfaces IApplication This interface represents a .NET application."
  },
  "api/CG.Hosting.IApplication.html": {
    "href": "api/CG.Hosting.IApplication.html",
    "title": "Interface IApplication",
    "keywords": "Interface IApplication This interface represents a .NET application. Namespace : CG.Hosting Assembly : CG.Hosting.dll Syntax public interface IApplication Extension Methods ApplicationExtensions.RunOnce<TProgram>(IApplication, Action) ApplicationExtensions.RunOnceAsync<TProgram>(IApplication, Action, CancellationToken)"
  },
  "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class ApplicationBuilderExtensions Methods UseStandardExtensions(IApplicationBuilder) This method adds middleware to support a standard hosting configuration, including user secrets, program options, and serilog logging. Declaration public static IApplicationBuilder UseStandardExtensions(this IApplicationBuilder applicationBuilder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter for chaining calls together. Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions",
    "keywords": "Class HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types. Inheritance System.Object HostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostBuilderExtensions Methods AddStandardExtensions<TProgram>(IHostBuilder) This method adds standard hosting configuration to the specified host builder, including user secrets and serilog logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram>(this IHostBuilder hostBuilder) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. AddStandardExtensions<TProgram, TOptions>(IHostBuilder) This method adds standard hosting configuration to the specified host builder, including user secrets, program options, and serilog logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram, TOptions>(this IHostBuilder hostBuilder) where TProgram : class where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. TOptions The type of associated options. Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. AddStandardExtensions<TProgram, TOptions>(IHostBuilder, String) This method adds standard hosting configuration to the specified host builder, including user secrets, program options, and serilog logging. Declaration public static IHostBuilder AddStandardExtensions<TProgram, TOptions>(this IHostBuilder hostBuilder, string sectionName) where TProgram : class where TOptions : class, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. System.String sectionName The configuration section to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TProgram The type of associated hosting program. TOptions The type of associated options. Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostExtensions Methods RunDelegate(IHost, Action<IHost>) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static void RunDelegate(this IHost host, Action<IHost> action) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static Task RunDelegateAsync(this IHost host, Action<IHost, CancellationToken> action, CancellationToken token = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > action The delegate to use for the operation. System.Threading.CancellationToken token A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.html": {
    "href": "api/Microsoft.Extensions.Hosting.html",
    "title": "Namespace Microsoft.Extensions.Hosting",
    "keywords": "Namespace Microsoft.Extensions.Hosting Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types. HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Hosting.dll contains standard hosting logic used by other CodeGator packages."
  }
}