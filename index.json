{
  "api/Microsoft.Extensions.Hosting.HostExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostExtensions Methods RunDelegate(IHost, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static void RunDelegate(this IHost host, Action<IHost, CancellationToken> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > action The delegate to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Examples This example demostrates a typical use of the RunDelegate(IHost, Action<IHost, CancellationToken>, CancellationToken) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .Build() .RunDelegate((host) => { Console.WriteLine(\"Hello World\"); }); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object. Declaration public static async Task RunDelegateAsync(this IHost host, Action<IHost, CancellationToken> action, CancellationToken token = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > action The delegate to use for the operation. System.Threading.CancellationToken token A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Examples This example demostrates a typical use of the RunDelegateAsync(IHost, Action<IHost, CancellationToken>, CancellationToken) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .Build() .RunDelegateAsync((host, token) => { Console.WriteLine(\"Hello World\"); }).Result; } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunOnce<TProgram>(IHost, Action<IHost>) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object, allowing a single instance at any given time to run on the given machine. Declaration public static bool RunOnce<TProgram>(this IHost host, Action<IHost> action) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. Returns Type Description System.Boolean True if the delegate was run; false otherwise. Type Parameters Name Description TProgram The type of associated .NET program Examples This example demonstrates how to use the RunOnce<TProgram>(IHost, Action<IHost>) method: class TestProgram { static void Main(string[] args) { Host.CreateDefaultBuilder() .Build() .RunOnce(host => { Console.WriteLine(\"Hello World\"); }); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunOnceAsync<TProgram>(IHost, Action<IHost>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHost object, allowing a single instance at any given time to run on the given machine. Declaration public static async Task<bool> RunOnceAsync<TProgram>(this IHost host, Action<IHost> action, CancellationToken cancellationToken = default(CancellationToken)) where TProgram : class Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost > action The delegate to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Boolean > True if the delegate was run; false otherwise. Type Parameters Name Description TProgram The type of associated .NET program Remarks This method is intended to wrap the logic in the main entry point of a .NET process. It then prevents that logic from being run more than once simultaneously. Examples This example demonstrates how to use the RunOnceAsync<TProgram>(IHost, Action<IHost>, CancellationToken) method: class TestProgram { static async Task Main(string[] args) { await Host.CreateDefaultBuilder() .Build() .RunOnceAsync((host) => { Console.WriteLine(\"Hello World\"); }); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.html",
    "title": "Class HostingHostBuilderExtensions",
    "keywords": "Class HostingHostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types, for registering types related to host building. Inheritance System.Object HostingHostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Hosting.dll Syntax public static class HostingHostBuilderExtensions Methods RunDelegate(IHostBuilder, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHostBuilder object. Declaration public static void RunDelegate(this IHostBuilder hostBuilder, Action<IHost, CancellationToken> hostDelegate, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > hostDelegate The delegate to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Examples This example demostrates a typical use of the RunDelegate(IHostBuilder, Action<IHost, CancellationToken>, CancellationToken) method: public void ConfigureServices(IServiceCollection services) { Host.CreateDefaultBuilder() .RunDelegate((host, token) => { Console.WriteLine(\"Hello World\"); }); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RunDelegateAsync(IHostBuilder, Action<IHost, CancellationToken>, CancellationToken) This method runs a delegate within the context of the specified Microsoft.Extensions.Hosting.IHostBuilder object. Declaration public static async Task RunDelegateAsync(this IHostBuilder hostBuilder, Action<IHost, CancellationToken> action, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. System.Action < Microsoft.Extensions.Hosting.IHost , System.Threading.CancellationToken > action The delegate to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL."
  },
  "api/Microsoft.Extensions.Hosting.html": {
    "href": "api/Microsoft.Extensions.Hosting.html",
    "title": "Namespace Microsoft.Extensions.Hosting",
    "keywords": "Namespace Microsoft.Extensions.Hosting Classes HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. HostingHostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder types, for registering types related to host building."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Hosting.dll contains standard hosting logic used by other CodeGator packages."
  }
}